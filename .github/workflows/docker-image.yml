name: Docker CI with Quality Gates and Python E2E Tests

on:
  push:
    branches: [ "main" ]

jobs:
  install-chrome:
    runs-on: ubuntu-latest
    steps:
      - name: Install Chrome and ChromeDriver
        run: |
          sudo apt update
          sudo apt install -y google-chrome-stable
          sudo apt install -y chromium-chromedriver

  quality-gates:
    name: Lint and Format Check
    runs-on: ubuntu-latest
    needs: install-chrome
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install Backend Dependencies
        run: cd Back && npm ci

      - name: Install Frontend Dependencies
        run: cd Front && npm ci

  unit-tests:
    name: Run Backend Unit Tests
    runs-on: ubuntu-latest
    needs: quality-gates
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install Dependencies
        run: cd Back && npm ci

      - name: Run Unit Tests
        run: cd Back && npm run test

  e2e-tests-python:
    name: Clone Python Repo & Run E2E Tests
    runs-on: ubuntu-latest
    needs: unit-tests
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Clone External Python Repo
        run: git clone https://github.com/Daniel1309CHC/CampusPartyAutomationTest.git

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"

      - name: Create Virtual Environment
        run: |
          cd CampusPartyAutomationTest
          python -m venv venv
          source venv/bin/activate

      - name: Install Dependencies
        run: |
          cd CampusPartyAutomationTest
          source venv/bin/activate
          pip install -r requirements.txt

      - name: Run E2E Tests (Selenium, PyTest, etc.)
        run: |
          cd CampusPartyAutomationTest
          source venv/bin/activate
          python runnert.py --browser chrome --headless --report

  build-and-push:
    name: Build & Push Docker Image
    runs-on: ubuntu-latest
    needs: e2e-tests-python
    if: success()  # Solo ejecuta si todo lo anterior pas√≥
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build Docker Image
        run: docker compose up --build -d

      - name: Tag and Push to Docker Hub
        run: |
          docker tag my-image-name:latest ${{ secrets.DOCKER_USERNAME }}/my-image-name:latest
          docker push ${{ secrets.DOCKER_USERNAME }}/my-image-name:latest
