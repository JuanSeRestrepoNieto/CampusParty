{"ast":null,"code":"var _jsxFileName = \"/Users/jsrnieto/Documents/GitHub/CampusParty/Front/src/context/AuthContext.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport { storageService } from '../services/storage.service';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext(undefined);\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [user, setUser] = useState(null);\n  const [token, setToken] = useState(null);\n  const [isLoading, setIsLoading] = useState(true);\n  useEffect(() => {\n    // Cargar datos del usuario y token al iniciar\n    const savedToken = storageService.getToken();\n    const savedRole = storageService.getRole();\n    if (savedToken && savedRole) {\n      setToken(savedToken);\n      setUser({\n        id: '1',\n        name: 'Usuario Demo',\n        email: 'demo@campusparty.com',\n        role: savedRole\n      });\n    }\n    setIsLoading(false);\n  }, []);\n  const login = (userData, token) => {\n    setUser(userData);\n    setToken(token);\n    storageService.setToken(token);\n    storageService.setRole(userData.role);\n  };\n  const logout = () => {\n    setUser(null);\n    setToken(null);\n    storageService.clear();\n  };\n  const hasRole = role => {\n    return (user === null || user === void 0 ? void 0 : user.role) === role;\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      user,\n      token,\n      login,\n      logout,\n      isLoading,\n      hasRole\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthProvider, \"mX4/AXRUN66G8j/NKXHYWKblzjI=\");\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n  const context = useContext(AuthContext);\n  if (context === undefined) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n_s2(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","storageService","jsxDEV","_jsxDEV","AuthContext","undefined","AuthProvider","children","_s","user","setUser","token","setToken","isLoading","setIsLoading","savedToken","getToken","savedRole","getRole","id","name","email","role","login","userData","setRole","logout","clear","hasRole","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","context","Error","$RefreshReg$"],"sources":["/Users/jsrnieto/Documents/GitHub/CampusParty/Front/src/context/AuthContext.tsx"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\nimport { storageService } from '../services/storage.service';\n\ninterface User {\n  id: string;\n  name: string;\n  email: string;\n  role: string;\n}\n\ninterface AuthContextType {\n  user: User | null;\n  token: string | null;\n  login: (userData: User, token: string) => void;\n  logout: () => void;\n  isLoading: boolean;\n  hasRole: (role: string) => boolean;\n}\n\nconst AuthContext = createContext<AuthContextType | undefined>(undefined);\n\nexport const AuthProvider: React.FC<{ children: React.ReactNode }> = ({ children }) => {\n  const [user, setUser] = useState<User | null>(null);\n  const [token, setToken] = useState<string | null>(null);\n  const [isLoading, setIsLoading] = useState(true);\n\n  useEffect(() => {\n    // Cargar datos del usuario y token al iniciar\n    const savedToken = storageService.getToken();\n    const savedRole = storageService.getRole();\n    \n    if (savedToken && savedRole) {\n      setToken(savedToken);\n      setUser({\n        id: '1',\n        name: 'Usuario Demo',\n        email: 'demo@campusparty.com',\n        role: savedRole\n      });\n    }\n\n    setIsLoading(false);\n  }, []);\n\n  const login = (userData: User, token: string) => {\n    setUser(userData);\n    setToken(token);\n    storageService.setToken(token);\n    storageService.setRole(userData.role);\n  };\n\n  const logout = () => {\n    setUser(null);\n    setToken(null);\n    storageService.clear();\n  };\n\n  const hasRole = (role: string) => {\n    return user?.role === role;\n  };\n\n  return (\n    <AuthContext.Provider value={{ user, token, login, logout, isLoading, hasRole }}>\n      {children}\n    </AuthContext.Provider>\n  );\n};\n\nexport const useAuth = () => {\n  const context = useContext(AuthContext);\n  if (context === undefined) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC7E,SAASC,cAAc,QAAQ,6BAA6B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAkB7D,MAAMC,WAAW,gBAAGP,aAAa,CAA8BQ,SAAS,CAAC;AAEzE,OAAO,MAAMC,YAAqD,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EACrF,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGX,QAAQ,CAAc,IAAI,CAAC;EACnD,MAAM,CAACY,KAAK,EAAEC,QAAQ,CAAC,GAAGb,QAAQ,CAAgB,IAAI,CAAC;EACvD,MAAM,CAACc,SAAS,EAAEC,YAAY,CAAC,GAAGf,QAAQ,CAAC,IAAI,CAAC;EAEhDC,SAAS,CAAC,MAAM;IACd;IACA,MAAMe,UAAU,GAAGd,cAAc,CAACe,QAAQ,CAAC,CAAC;IAC5C,MAAMC,SAAS,GAAGhB,cAAc,CAACiB,OAAO,CAAC,CAAC;IAE1C,IAAIH,UAAU,IAAIE,SAAS,EAAE;MAC3BL,QAAQ,CAACG,UAAU,CAAC;MACpBL,OAAO,CAAC;QACNS,EAAE,EAAE,GAAG;QACPC,IAAI,EAAE,cAAc;QACpBC,KAAK,EAAE,sBAAsB;QAC7BC,IAAI,EAAEL;MACR,CAAC,CAAC;IACJ;IAEAH,YAAY,CAAC,KAAK,CAAC;EACrB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMS,KAAK,GAAGA,CAACC,QAAc,EAAEb,KAAa,KAAK;IAC/CD,OAAO,CAACc,QAAQ,CAAC;IACjBZ,QAAQ,CAACD,KAAK,CAAC;IACfV,cAAc,CAACW,QAAQ,CAACD,KAAK,CAAC;IAC9BV,cAAc,CAACwB,OAAO,CAACD,QAAQ,CAACF,IAAI,CAAC;EACvC,CAAC;EAED,MAAMI,MAAM,GAAGA,CAAA,KAAM;IACnBhB,OAAO,CAAC,IAAI,CAAC;IACbE,QAAQ,CAAC,IAAI,CAAC;IACdX,cAAc,CAAC0B,KAAK,CAAC,CAAC;EACxB,CAAC;EAED,MAAMC,OAAO,GAAIN,IAAY,IAAK;IAChC,OAAO,CAAAb,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEa,IAAI,MAAKA,IAAI;EAC5B,CAAC;EAED,oBACEnB,OAAA,CAACC,WAAW,CAACyB,QAAQ;IAACC,KAAK,EAAE;MAAErB,IAAI;MAAEE,KAAK;MAAEY,KAAK;MAAEG,MAAM;MAAEb,SAAS;MAAEe;IAAQ,CAAE;IAAArB,QAAA,EAC7EA;EAAQ;IAAAwB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B,CAAC;AAAC1B,EAAA,CA7CWF,YAAqD;AAAA6B,EAAA,GAArD7B,YAAqD;AA+ClE,OAAO,MAAM8B,OAAO,GAAGA,CAAA,KAAM;EAAAC,GAAA;EAC3B,MAAMC,OAAO,GAAGxC,UAAU,CAACM,WAAW,CAAC;EACvC,IAAIkC,OAAO,KAAKjC,SAAS,EAAE;IACzB,MAAM,IAAIkC,KAAK,CAAC,6CAA6C,CAAC;EAChE;EACA,OAAOD,OAAO;AAChB,CAAC;AAACD,GAAA,CANWD,OAAO;AAAA,IAAAD,EAAA;AAAAK,YAAA,CAAAL,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}